{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["getCurrentDate","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","App","min","max","useState","time","setTime","useEffect","secondsTimer","setInterval","clearInterval","className","src","logo","alt","href","target","rel","Math","ceil","floor","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,MAA0B,iC,eCIzC,SAASA,IAQL,OAPW,IAAIC,MAAOC,UAOP,MANH,IAAID,MAAOE,WAAa,GAMP,KALlB,IAAIF,MAAOG,cAKoB,KAJ9B,IAAIH,MAAOI,WAIiC,KAH9C,IAAIJ,MAAOK,aAG+C,KAF1D,IAAIL,MAAOM,aA2CVC,MAhCf,WACI,IAPkBC,EAAKC,EAOvB,EAAwBC,mBAASX,KAAjC,mBAAOY,EAAP,KAAaC,EAAb,KAUF,OAREC,qBAAU,WACN,IAAMC,EAAeC,aAAY,WAC9BH,EAAQb,OACR,KACH,OAAO,kBAAMiB,cAAcF,MAC1B,IAIL,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,6CAGA,mCAAMT,EAAN,OACA,mBACEM,UAAU,WACVI,KAAK,iEACLC,OAAO,SACPC,IAAI,sBAJN,SAMI,SA/BUf,EA+Ba,EA/BRC,EA+BU,IA9BjCD,EAAMgB,KAAKC,KAAKjB,GAChBC,EAAMe,KAAKE,MAAMjB,GACVe,KAAKE,MAAMF,KAAKG,UAAYlB,EAAMD,EAAM,IAAMA,EA4Bb,kBClC7BoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.80131f33.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction getCurrentDate(){\n    let date = new Date().getDate(); //Current Date\n    let month = new Date().getMonth() + 1; //Current Month\n    let year = new Date().getFullYear(); //Current Year\n    let hours = new Date().getHours(); //Current Hours\n    let min = new Date().getMinutes(); //Current Minutes\n    let sec = new Date().getSeconds(); //Current Seconds\n  \n    return (date + '/' + month + '/' + year + ' ' + hours + ':' + min + ':' + sec);\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction App() {\n    const [time, setTime] = useState(getCurrentDate());\n    \n    useEffect(() => {\n        const secondsTimer = setInterval(() => {\n           setTime(getCurrentDate());\n        }, 1000);\n        return () => clearInterval(secondsTimer);\n      }, []);\n    \n    \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          The time is:\n        </p>\n        <h2> {time} </h2>\n        <a\n          className=\"App-link\"\n          href=\"https://uvg.instructure.com/courses/22069/files/3487964?wrap=1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n           {\"I am \" + getRandomInt(0,100) + \"% sure\"}\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}